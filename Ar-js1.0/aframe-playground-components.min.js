(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.i=function(value){return value};__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{configurable:false,enumerable:true,get:getter})}};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=2)})([function(module,exports){AFRAME.registerComponent("camrender",{schema:{fps:{type:"number",default:90},cid:{type:"string",default:"camRenderer"},height:{type:"number",default:300},width:{type:"number",default:400}},multiple:false,init:function(){},update:function(oldData){var data=this.data;if(oldData.cid!==data.cid){var canvasEl=document.getElementById(this.data.cid);this.renderer=new THREE.WebGLRenderer({antialias:true,canvas:canvasEl});this.renderer.setPixelRatio(window.devicePixelRatio);this.renderer.domElement.crossorigin="anonymous"}if(oldData.width!==data.width||oldData.height!==data.height){this.renderer.setSize(data.width,data.height);this.renderer.domElement.height=data.height;this.renderer.domElement.width=data.width}if(oldData.fps!==data.fps){this.tick=AFRAME.utils.throttleTick(this.tick,1e3/data.fps,this)}},remove:function(){},tick:function(time,timeDelta){this.renderer.render(this.el.sceneEl.object3D,this.el.object3DMap.camera)},pause:function(){},play:function(){}})},function(module,exports){AFRAME.registerComponent("canvas-updater",{dependencies:["geometry","material"],schema:{},multiple:false,init:function(){},update:function(oldData){},remove:function(){},tick:function(time,timeDelta){var el=this.el;var material;material=el.getObject3D("mesh").material;if(!material.map){return}material.map.needsUpdate=true},pause:function(){},play:function(){}})},function(module,exports,__webpack_require__){if(typeof AFRAME==="undefined"){throw new Error("Component attempted to register before AFRAME was available.")}__webpack_require__(0);__webpack_require__(1)}]);
